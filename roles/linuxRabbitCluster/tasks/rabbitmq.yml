---
# RabbitMQ user and vhost management

- name: Ensure the users is removed
  rabbitmq_user: user="{{ item }}" state=absent
  with_items: 
    - "{{ rabbitmq_users_removed }}"
  tags: [configuration,rabbitmq]
  ignore_errors: yes

- name: Ensure the vhosts is present
  rabbitmq_vhost: name="{{ item }}"
  with_items:
    - "{{ rabbitmq_vhosts }}"
  tags: [configuration,rabbitmq]

- name: Ensure the users is present
  rabbitmq_user:
    user: "{{ item.user }}"
    password: "{{ item.password }}"
    configure_priv: "{{ item.configure_priv|default('.*') }}"
    read_priv: "{{ item.read_priv|default('.*') }}"
    write_priv: "{{ item.write_priv|default('.*') }}"
    vhost: "{{ item.vhost|default('/') }}"
    tags: "{{ item.tags|default('') }}"
  with_items:
    - "{{ rabbitmq_users }}"
  tags: [configuration,rabbitmq]
  ignore_errors: yes

- name: ensure the default vhost contains the HA policy
  rabbitmq_policy: name=HA pattern='{{ rabbitmq_ha_pattern }}'
  args:
   tags:
    "ha-mode": '{{ rabbitmq_ha_mode }}'
  when: rabbitmq_create_cluster and rabbitmq_ha_enabled

- name: Symlink RabbitMQ bin to sbin
  file: state=link src=/usr/lib/rabbitmq/bin dest=/usr/lib/rabbitmq/sbin
  tags: [configuration,rabbitmq]

- name: Enable the plugins is installed
  rabbitmq_plugin: names="{{ item }}" state=enabled prefix=/usr/lib/rabbitmq
  with_items:
    - "{{ rabbitmq_plugins }}"
  notify: restart rabbitmq-server
  tags: [configuration,rabbitmq]

